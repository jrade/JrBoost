answer Fredrik's question about making derived classes friends of the base class

simplify tree train functions by passing around a single tmp data struct instead of lots separate parameters
	have the struct contain outerT0, ..., innerT2 so we do not need the parent field
		outData
		weights
		options
		usedSampleCount
		threadCount
		threadIndex
		ITEM_COUNT
	pass as individual parameters:
		d
		usedVariableIndex

review all multi-threading code one more time

reviw all profiling code one more time

......................................................................................................

test and evaluate cycle option
	run Leukemia 20x10x5 with and w/o cycling

test and evaluate minNodeWeight again
	min¡bsNodeWeight and minRelNodeWeight???

test compiling with Clang for Visual Studio
	devblogs.microsoft.com/cppblog/clang-llvm-support-in-visual-studio/
	do we need the Intel Intrinsics to parallellize fastExp()?  Probably not

report:
	MSVS autovectorizer:
		does not handle reinterpret cast
		if they fix this, then ditch all the Intel intrinsics code
	pybind11:
		seem py::kw_only() does not interact well with callbacks
			insert py::kw_only() in LogLoss::operator() and run Iris.py
	Eigen:
		why cannot we use (a < inf).all() to detect NaN values in Eigen arrays?
			using isFinite is very slow (considering we only need to inspect a few bits)
		why does std::data() not work here? (see Select.cpp)
			const float* pInDataRowI = std::data(inData.row(inI));
			float* pOutDataRowI = &outData(outI, 0);

.............................................................................
		
major tasks:
	release 0.1
	improved Higgs example
	BART
	documentation of the different boost methods, incuding regularized logit boost
	improved Higgs example (see "Higgs Notes.txt")
	improved Otto example (see "Otto Notes.txt")
	tree regularization: L2 penalty (lambda), L1 penalty (alpha)
	gradient boost (Friedman and xgb papers)
		first and second order boost with any gamma
	compare performance (speed and accuracy) with xgboost
		construct Python classes with same interface as jrboost python classes
	histogram-based tree builder (would speed up Otto a lot, maybe Higgs too)
	multinomial predictors
	Clang + CMake for Visual Studio
		what is the standard code organization for a Python extension module?

features to add:
	log parameter optimization process
		log quartiles of each parameter after each cycle
	U-test (with correct handling of ties)
	multiple indata and multiple variable counts (to handle feature engineering)
		applications: PCA, separate counts for up- and down-regulated variables, chromosomes, NCC
	new way of calculating variable importance weights: when predicting (instead of when training)
	have train, predict and loss functions take samples argument?

optimizations (accuracy):
	iterate from both ends and meet in the middle when finding best split
	better parallelTrainAndEval for non-additive loss function (such as AUC)
	boost stop criteria
	pruning
	other ways of regularizing logit boost (should be scale invariant)
	
optimizations (speed):
	test compiling with LLVM for Visual Studio
	parallelize:
		ForestTrainer::train
		TreeTrainer::updateSampleStatus_
			easier if we do not use exact sums; can we do that?
	make branch free:
		TreeTrainer::updateSampleStatus_:
			introducing dummy nodes that contain the unused samples
			maybe maintain sorted lists of active samples to speed this up further
	t-test and F-test: are they SIMD optimized? do we load each cache line twice for large data sets?
	look into fast/precise sums; does it make any difference for speed and accuracy?
	have boost trainer produce packed wy data and feed it to tree trainer (some SIMD swizzle magic needed?)
	PGO

keep or ditch?
	fine-grained stratification (does it improve accuracy?)
	packed data (does it improve speed?)
		if we keep it, don't pass around outData and weights
	py::arg().noconvert() in t-test and F-test python wrappers
	saveMemory option
	stratifiedSamples option
	support for loading old file format versions
