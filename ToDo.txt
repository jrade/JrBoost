

main                      4710   2.8%
  t-rank                  5622   3.4%    4.8
  train boost            18821  11.3%   22.5
    validate              7413   4.4%    9.0
    used samples          9579   5.7%   11.5
    used variables        4716   2.8%   14.3
    sums                   777   0.5%    9.7
    sorted used s.       79237  47.4%    3.8
    best split           31760  19.0%   14.0
  predict                 1870   1.1%
  OMP barrier              448   0.3%
  dyn. memory             2078   1.2%  434.9

zero calibration: 68
profiling overhead: 16.8%
slow branch: 2.5%

0:01:38

=====================================================================

clean repo
	test with CERN boson data instead

push to GitHub

=====================================================================

square root loss??

other way of genertaing sorted list of samples
	create used sample list
	then sort this list
		test with pdq-sort (https://github.com/orlp/pdqsort)

test isStratified = true and false

weights and outdata as float instead of double?
	profile

do some micro-optimizations
	sums in partcular
	ideas
		move things into local varables
		access arrays through raw poiners
			how to get pointer to buffer of Eigen::CRef object?
	try __declspec(noalias)

implement smarter hyperparameter optimization methods

time without:
	ASSERT
	StumpTrainer::train data validation
	PROFILE


https://github.com/orlp/pdqsort

=====================================================================

Pandas free Python code

what type to use for out data matrix in python and in C interface??

produce report
	first a simple one
    add a train and predict function similar to train and eval

review data types:
	uint8_t for raw out data / strata?
	float for out data and weights?

-----------------------------------------------------------------------

gradient boost
	read xgb paper to check that my understanding is correct

trees
	pruning
	allocate nodes with a memory pool

data members of boosters should be const
	can not iterate over const Eigen Ref object!!!!

test PGO

----------------------------------------------------------------------

low prio:
	look in the old stub (or rather tree) builder code and see how I avoided rounding off errors towards the end
	allow more than two strata in StumpPredictor?
	L2-penalty (lambda) or L1-penalty (alpha)
	multi-group
	follow up alpha boost idea

----------------------------------------------------------------------

PyBind11 issues:
	how translate custom C++ exceptions to standard Python exceptions
	no way of specifying noocnvert for property setters
	investigate abstract factory crash (JrBooster Crash)
		is the problem return values that are derived objects passed with unique_ptr to base class?
		test with the Miniconda that somes bundles with Visual Studio
	
Gerstmann issues:
	add move constructors to enable code such as
		xorshift rne((std::random_device()));
	seed function would be useful
	free functions (operator== and operator!=) should be inline
		or linker will complain if you include the header in multiple translation units
	should be standard compliant

Eigen issues:
	can not reset Ref objects
	no select with two constants
	    StumpTrainerImpl(CRefXXf inData, RefXs strata)
			second argument should be CRefXs, but that leads to problems ...

	Eigen::Ref<Eigen::ArrayXf> u;
	auto p1 = u.begin();
	auto p2 = begin(u);
	auto p3 = u.cbegin();
	auto p4 = cbegin(u);
	float* p5 = &u(0);

	Eigen::Ref<Eigen::ArrayXf> u;
	auto q1 = u.cbegin();
	auto q2 = cbegin(u);
	const float* q3 = &u(0);

	also reverse iterators



NumPy issues:
	inData[trainSamples, :] does not preserve Fortran (column major) order

------------------------------------------------------------------------

take a look at std::span, std::view, std::mdview, ranges etc in C++20

