strata attribute
	add some asserts
	move to abstract base class?
		remove StumpTRainer includes

Qlucore wrapper

multi-group

parallellized hyperparameter evaluation

trees

should we worry about copying the indata matrix?

dynamic eta (smaller in the first iterations)

stratified sample subsets?? 
	kanske snabb implementation som idag med 

-------------------------------------------------------------------------

try mixed debugging again

low prio:
	pass outData and weights as Ref<ArrayXf>
	look in the old stub (or rather tree) builder code and see how I avoided rounding off errors towards the end
	faster uint64_t based Bernoulli distribution ??
	allow more than two strata in StumpPredictor?

-------------------------------------------------------------------

PyBind11 issues:
	investigate abstract factory crash (JrBooster Crash)
		is the problem return values that are derived objects passed with unique_ptr to base class?
		test with the Miniconda that somes bundles with Visual Studio
	how translate custom C++ exceptions to standard Python exceptions
	no way of specifying noocnvert for property setters
	
Gerstmann issues:
	add move constructors to enable code such as
		xorshift rne((std::random_device()));
	seed function would be useful
	free functions (operator== and operator!=) should be inline
		or linker will complain if you include the header in multiple translation units
	should be standard compliant

Eigen issues:
	can not reset Ref objects
	no select with two constants

--------------------------------------------------------------------------------

läs: https://romanpoya.medium.com/a-look-at-the-performance-of-expression-templates-in-c-eigen-vs-blaze-vs-fastor-vs-armadillo-vs-2474ed38d982

Notes:
	MSVS 2019:
		Tools > Options > Python > Conda: ..../conda.exe
		compiler flag:  /permissive-
		Run-time Library = Multi-threaded DLL (/MD) (for all configurations!)
		mixed debugging

	numpy: rowmajor
	eigen: colmajor

	https://docs.microsoft.com/en-us/visualstudio/python/working-with-c-cpp-python-in-visual-studio?view=vs-2019
